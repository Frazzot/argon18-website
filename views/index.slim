html lang="en"
    head
        meta charset="UTF-8"/
        meta name="viewport" content="width=device-width, initial-scale=1.0"/
        meta http-equiv="X-UA-Compatible" content="ie=edge"/
        link href="https://fonts.googleapis.com/css?family=Source+Code+Pro:200&display=swap" rel="stylesheet"
        link rel="icon" type="image/x-icon" href="./public/misc/Ellipse 1.ico"
        link rel="stylesheet" href="style.css"/
        title Argon18 | Ruby Gem
    body
        div id="bar"
        div class="bubble1"
            h1 class="title LowerTitle" 18
            h1 class="title" Ar
        div class="bubbleLeft"
            div class="bubble2"
            div class="bubble3"
        h3 class="ingress" Argon18 - A tiny webserver
        h3 class="ingress ingress2" for demo projects
        div id="buttonHolder"
            input class="button" type="button" value="Github" onclick="window.location.href='https://github.com/vincent-uden/argon18'"
            input class="button" type="button" value="RubyGems" onclick="window.location.href='https://rubygems.org/'"
        div class="textBg"
            div class="textContainer"
                h1 class="header" Argon18
                p class="text" Argon18 is a small gem designed for making small demo websites while still being able to easily use common dev tools such as slim and/or Sass.
        div class="bubbleRight"
            div class="bubble3"  
            div class="bubble2"
        div class="exampleBox"
            h1 class="header whiteHeader" Features
            ul class="list"
                li class="listItem" Creating webpages using Slim
                li class="listItem" Arbitrary Ruby code execution through Slim
                li class="listItem" Serving of static files (images, javascript, etc.)
        div class="textBg" class="textBgSpace"
            div class="textContainer" 
                h1 class="header" How to use?
                p class="text" An argon project is expected to to have to folders, public and views. Public will contain the static files such as the websites images, javascript files, etc. and views will contain the Slim files. An example project could look like this.
            
         